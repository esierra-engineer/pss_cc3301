Sistema operativo utilizado
Linux DESKTOP-90V28DL 5.15.153.1-microsoft-standard-WSL2 #1 SMP Fri Mar 29 23:14:13 UTC 2024 x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -DSANITIZE -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-desbalancear.c desbalancear.c test-util.c -lm -o desbalancear.bin-san
./desbalancear.bin-san
Tests unitarios
Primero se verifica desbalanceado porque es mas facil
-----------------------------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y un nodo izquierdo
Verificando ejemplo del enunciado

Ahora se verifica desbalancear
------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y u nodo izquierdo
Verificando ejemplo del enunciado

Tests aprobados

Verificando un arbol de 100 mil nodos
-------------------------------------

Aprobado
Aprobado
Tests masivos

=========================
Benchmark de desbalancear
=========================
Tiempo de cpu usado por su version: 4 milisegundos

==========================
Benchmark de desbalanceado
==========================
Tiempo de cpu usado por su version: 178 milisegundos
Aprobado
Felicitaciones: aprobo los tests de este modo de ejecucion
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-desbalancear.c desbalancear.c test-util.c -lm -o desbalancear.bin-g
./desbalancear.bin-g
Tests unitarios
Primero se verifica desbalanceado porque es mas facil
-----------------------------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y un nodo izquierdo
Verificando ejemplo del enunciado

Ahora se verifica desbalancear
------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y u nodo izquierdo
Verificando ejemplo del enunciado

Tests aprobados

Verificando un arbol de 100 mil nodos
-------------------------------------

Aprobado
Aprobado
Tests masivos

=========================
Benchmark de desbalancear
=========================
Tiempo de cpu usado por su version: 1 milisegundos

==========================
Benchmark de desbalanceado
==========================
Tiempo de cpu usado por su version: 8 milisegundos
Aprobado
Felicitaciones: aprobo los tests de este modo de ejecucion
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-desbalancear.c desbalancear.c test-util.c -lm -o desbalancear.bin
Midiendo cuanto demora la solucion del profesor
rm -f tiempo-ref.txt
chmod +x prof.ref-x86_64
./prof.ref-x86_64 ref > /dev/null
Tiempos de referencia =  98 165
Verificando y comparando con su solucion
./desbalancear.bin 98 165
Tests unitarios
Primero se verifica desbalanceado porque es mas facil
-----------------------------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y un nodo izquierdo
Verificando ejemplo del enunciado

Ahora se verifica desbalancear
------------------------------

Verificando el arbol vacio
Verificando arbol de un solo nodo
Verificando arbol con un nodo raiz y un nodo derecho
Verificando arbol con un nodo raiz y u nodo izquierdo
Verificando ejemplo del enunciado

Tests aprobados

Verificando un arbol de 100 mil nodos
-------------------------------------

Aprobado
Aprobado

=========================
Benchmark de desbalancear
=========================
Tiempo de cpu usado por su version: 59 milisegundos
Tiempo de la version del profesor : 98 milisegundos
Porcentaje de sobrecosto: -39 %

==========================
Benchmark de desbalanceado
==========================
Tiempo de cpu usado por su version: 340 milisegundos
Tiempo de la version del profesor : 165 milisegundos
Porcentaje de sobrecosto: 106 %
Tiempo de cpu usado por su version: 237 milisegundos
Tiempo de la version del profesor : 165 milisegundos
Porcentaje de sobrecosto: 43 %
Aprobado
Felicitaciones: aprobo los tests de este modo de ejecucion
